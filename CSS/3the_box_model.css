/*  
Introduction to the Box Model
This include::afterwidth
height
padding
border
margin
overflow

The Box Model
width and height: The width and height of the content area.
padding: The amount of space between the content area and the border.
border: The thickness and style of the border surrounding the content area and padding.
margin: The amount of space between the border and the outside edge of the element.

Height and Width
By default, the dimensions of an HTML box are set to hold the raw contents of the box.
p {
  height: 80px;
  width: 240px;
}

Borders
A border is a line that surrounds an element, like a frame around a painting. 
The default border is medium none color.
Borders can be set with a specific width, style, and color.
Some of these styles include: none, dotted, and solid.
p {
  border: 3px solid coral;
}


Border Radius
div.container {
  border: 3px solid blue;
  border-radius: 5px;
}
will set all four corners of the border to a radius of 5 pixels 
(i.e. the same curvature that a circle with a radius of 5 pixels would have).

A perfect circle : 
div.container {
  height: 60px;
  width: 60px;
  border: 3px solid blue;
  border-radius: 50%;
}
same width and height, and then setting the radius equal to half the width of the box, which is 50%.


Padding
The space between the contents of a box and the borders of a box
p.content-header {
  border: 3px solid coral;
  padding: 10px;
}
padding-top: 
padding-right: 
padding-bottom:  
padding-left: 



Padding Shorthand
4 Values: 
p.content-header {
  padding: 6px 11px 4px 9px;
}
clockwise rotation top to left. 

3 Values:
p.content-header {
  padding: 5px 10px 20px;
}
If the left and right sides of the content can be equal, top, left  &  right, bottom.

2 Values: 
p.content-header {
  padding: 5px 10px;
}
if the top and bottom sides can be equal, and the left and right sides can be equal
top   & bottom,  left & right. 



Margin
Margin refers to the space directly outside of the box. 
The margin property is used to specify the size of this space.
p {
  border: 1px solid aquamarine;
  margin: 20px;
}

If you want to be even more specific about the amount of margin on each side of a box, 
you can use the following properties:
margin-top
margin-right
margin-bottom
margin-left


Margin Shorthand
4,3,2  values applies same  as  margin. 

Auto
The margin property also lets you center content.
div.headline {
  width: 400px;
  margin: 0 auto;
}
margin: 0 auto; will center the divs in their containing elements. The 0 sets the top and bottom margins to 0 pixels. 
The auto value instructs the browser to adjust the left and right margins until the element is centered within 
its containing element. a width must be set for that element. 



Margin Collapse
One additional difference is that top and bottom margins, also called vertical margins, 
collapse, while top and bottom padding does not.
Horizontal margins (left and right), like padding, are always displayed and added together. 

#img-one {
  margin-right: 20px;
} 
#img-two {
  margin-left: 20px;
}
they will be as far apart as the sum of their adjacent margins.

vertical margins do not add. 
Instead, the larger of the two vertical margins sets the distance between adjacent elements.
#img-one {
  margin-bottom: 30px;
} 
#img-two {
  margin-top: 20px;
}
the vertical margin between the #img-one and #img-two elements is 30 pixels.



Minimum and Maximum Height and Width
Because of screen size, CSS offers two properties that can limit sizes: 
min-width  this property ensures a minimum width of an element’s box.
max-width  this property ensures a maximum width of an element’s box
min-height this property ensures a minimum height for an element’s box.
max-height this property ensures a maximum height of an element’s box.
p {
  min-width: 200px;
  max-width: 800px;
  min-height: 200px;
  max-height: 300px;
}

Overflow
<img width=364px height=244px>  
The total dimensions (364px by 244px) are calculated by adding all of the vertical dimensions together 
and all of the horizontal dimensions together. 
Sometimes, these components result in an element that is larger than the parent’s containing area.
The overflow property controls what happens to content that spills: 
hidden  when set to this value, any content that overflows will be hidden from view.
scroll  when set to this value, a scrollbar will be added to the element’s box so that the rest of the content can be viewed by scrolling.
visible  when set to this value, the overflow content will be displayed outside of the containing element. Note, this is the default value.

p {
  overflow: scroll; 
}
a second scroll bar should appear over the paragraph section. 

Resetting Defaults
Many developers choose to reset these default values so that they can truly work with a clean slate.
* {
  margin: 0;
  padding: 0;
}
resets the default margin and padding values of all HTML elements. 
It is often the first CSS rule in an external stylesheet.
body {
  margin: 0;
  padding: 0;
}
will use 100%  of the browser. 


Visibility
Hides  elements. 
The visibility property can be set to one of the following values:
hidden — hides an element.
visible — displays an element.
collapse — collapses an element.

HTML: 
<ul>
  <li>Explore</li>
  <li>Connect</li>
  <li class="future"> Donate </li>
</ul>
CSS: 
.future {
  visibility: hidden;
}
display: none will be completely removed from the web page. 
visibility: hidden will not be visible on the web page, but the space reserved for it will.


Review:
The box model comprises a set of properties used to create space around and between HTML elements.
The height and width of a content area can be set in pixels or percentages.
Borders surround the content area and padding of an element. The color, style, and thickness of a border can be set with CSS properties.
Padding is the space between the content area and the border. It can be set in pixels or percent.
Margin is the amount of spacing outside of an element’s border.
Horizontal margins add, so the total space between the borders of adjacent elements is equal to the sum of the right margin of one element and the left margin of the adjacent element.
Vertical margins collapse, so the space between vertically adjacent elements is equal to the larger margin.
margin: 0 auto horizontally centers an element inside of its parent content area, if it has a width.
The overflow property can be set to display, hide, or scroll, and dictates how HTML will render content that overflows its parent’s content area.
The visibility property can hide or show elements.


CHANGING THE BOX MODEL

Why Change the Box Model?
Under this box model, the border thickness and padding are added to the overall dimensions of the box. 
This makes it difficult to accurately size a box. 
Over time, this can also make all of a web page’s content difficult to position and manage.


Box Model: Content-Box
The default box model used by the browser is content-box.

Box Model: Border-Box
we can reset the entire box model and specify a new one: border-box.
* {
  box-sizing: border-box;
}

h1 {
  border: 1px solid black;
  height: 200px;
  width: 300px;
  padding: 10px;
}
 the height of the box would remain at 200 pixels and the width would remain at 300 pixels. 
 The border thickness and padding would remain entirely inside of the box.


The New Box Model
* {
  box-sizing: border-box;
}
(*) targets all elements on the web page and sets their box model to the border-box model.


Review: Changing the Box Model
In the default box model, box dimensions are affected by border thickness and padding.
The box-sizing property controls the box model used by the browser.
The default value of the box-sizing property is content-box.
The value for the new box model is border-box.
The border-box model is not affected by border thickness or padding.
*/